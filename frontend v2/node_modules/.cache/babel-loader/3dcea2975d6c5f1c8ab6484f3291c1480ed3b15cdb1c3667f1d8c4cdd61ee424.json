{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tebie\\\\Documents\\\\fantasix-draft\\\\frontend v2\\\\src\\\\context\\\\FantasyContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/FantasyContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FantasyContext = /*#__PURE__*/createContext();\nexport const FantasyProvider = ({\n  children\n}) => {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Obtener participantes y jugadores al montar el proveedor\n  useEffect(() => {\n    const fetchParticipants = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/participants'); // Cambié el puerto a 3000\n        if (!response.ok) throw new Error('Error al obtener los participantes');\n        const data = await response.json();\n        setParticipants(data);\n      } catch (error) {\n        console.error('Error fetching participants:', error);\n      }\n    };\n    const fetchPlayers = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/players'); // Cambié el puerto a 3000\n        if (!response.ok) throw new Error('Error al obtener los jugadores');\n        const data = await response.json();\n        setPlayers(data);\n      } catch (error) {\n        console.error('Error fetching players:', error);\n      }\n    };\n    const fetchData = async () => {\n      setLoading(true);\n      await Promise.all([fetchParticipants(), fetchPlayers()]);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FantasyContext.Provider, {\n    value: {\n      participants,\n      players,\n      loading,\n      setParticipants,\n      setPlayers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar el contexto\n_s(FantasyProvider, \"41OFlMS/o4VzEKSpRPUE5P7rgow=\");\n_c = FantasyProvider;\nexport const useFantasy = () => {\n  _s2();\n  return useContext(FantasyContext);\n};\n_s2(useFantasy, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FantasyProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","FantasyContext","FantasyProvider","children","_s","participants","setParticipants","players","setPlayers","loading","setLoading","fetchParticipants","response","fetch","ok","Error","data","json","error","console","fetchPlayers","fetchData","Promise","all","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFantasy","_s2","$RefreshReg$"],"sources":["C:/Users/tebie/Documents/fantasix-draft/frontend v2/src/context/FantasyContext.js"],"sourcesContent":["// src/context/FantasyContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Crear el contexto\r\nconst FantasyContext = createContext();\r\n\r\nexport const FantasyProvider = ({ children }) => {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [players, setPlayers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Obtener participantes y jugadores al montar el proveedor\r\n  useEffect(() => {\r\n    const fetchParticipants = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/api/participants'); // Cambié el puerto a 3000\r\n        if (!response.ok) throw new Error('Error al obtener los participantes');\r\n        const data = await response.json();\r\n        setParticipants(data);\r\n      } catch (error) {\r\n        console.error('Error fetching participants:', error);\r\n      }\r\n    };\r\n\r\n    const fetchPlayers = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/api/players'); // Cambié el puerto a 3000\r\n        if (!response.ok) throw new Error('Error al obtener los jugadores');\r\n        const data = await response.json();\r\n        setPlayers(data);\r\n      } catch (error) {\r\n        console.error('Error fetching players:', error);\r\n      }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      await Promise.all([fetchParticipants(), fetchPlayers()]);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <FantasyContext.Provider value={{ participants, players, loading, setParticipants, setPlayers }}>\r\n      {children}\r\n    </FantasyContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook personalizado para usar el contexto\r\nexport const useFantasy = () => {\r\n  return useContext(FantasyContext);\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC,CAAC,CAAC;QACxE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;QACvE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,eAAe,CAACU,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QACnE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,UAAU,CAACQ,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BX,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMY,OAAO,CAACC,GAAG,CAAC,CAACZ,iBAAiB,CAAC,CAAC,EAAES,YAAY,CAAC,CAAC,CAAC,CAAC;MACxDV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA,CAACC,cAAc,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,YAAY;MAAEE,OAAO;MAAEE,OAAO;MAAEH,eAAe;MAAEE;IAAW,CAAE;IAAAL,QAAA,EAC7FA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AAAAzB,EAAA,CA7CaF,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AA8C5B,OAAO,MAAM6B,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,OAAOpC,UAAU,CAACK,cAAc,CAAC;AACnC,CAAC;AAAC+B,GAAA,CAFWD,UAAU;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}