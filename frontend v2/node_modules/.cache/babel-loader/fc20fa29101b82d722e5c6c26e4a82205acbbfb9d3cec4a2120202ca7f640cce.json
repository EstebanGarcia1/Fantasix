{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tebie\\\\Documents\\\\fantasix-draft\\\\frontend v2\\\\src\\\\components\\\\Roster.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { ScrollArea } from \"./ui/scroll-area\";\nimport './styles/global.scss'; // Importa los estilos globales aquí\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Roster = () => {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Aquí es donde colocamos la llamada fetch\n  useEffect(() => {\n    // Función para obtener los participantes desde el backend\n    const fetchParticipants = async () => {\n      setLoading(true);\n      try {\n        // Aquí usamos la URL desde la variable de entorno\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/participants`);\n        if (!response.ok) {\n          throw new Error('Error al obtener los participantes');\n        }\n        const data = await response.json(); // Convertir los datos en JSON\n        setParticipants(data); // Guardar los datos de los participantes en el estado\n        setSelectedParticipant(data[0]); // Seleccionar el primer participante por defecto\n      } catch (err) {\n        setError(err.message); // Si hay un error, lo guardamos en el estado\n      } finally {\n        setLoading(false); // Dejamos de cargar\n      }\n    };\n\n    // Llamamos a la función para obtener los datos\n    fetchParticipants();\n  }, []); // Solo se ejecutará una vez cuando se monte el componente\n\n  // Renderizamos los participantes y mostramos el roster (equipo)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Vista del Equipo Draft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollArea, {\n      className: \"w-full mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2 pb-4\",\n        children: participants.map(participant => /*#__PURE__*/_jsxDEV(Button, {\n          variant: (selectedParticipant === null || selectedParticipant === void 0 ? void 0 : selectedParticipant.id) === participant.id ? \"default\" : \"outline\",\n          onClick: () => setSelectedParticipant(participant),\n          children: participant.name\n        }, participant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : selectedParticipant ? /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          children: [\"Equipo de \", selectedParticipant.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Puntos totales: \", selectedParticipant.points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Selecciona un participante para ver su equipo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Roster, \"8H+WZrThxdou3FttQ7scgSRt8zg=\");\n_c = Roster;\nexport default Roster;\nvar _c;\n$RefreshReg$(_c, \"Roster\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","CardHeader","CardTitle","Button","ScrollArea","jsxDEV","_jsxDEV","Roster","_s","participants","setParticipants","selectedParticipant","setSelectedParticipant","loading","setLoading","error","setError","fetchParticipants","response","fetch","process","env","REACT_APP_API_URL","ok","Error","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","participant","variant","id","onClick","name","points","_c","$RefreshReg$"],"sources":["C:/Users/tebie/Documents/fantasix-draft/frontend v2/src/components/Roster.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\r\nimport { Button } from \"./ui/button\";\r\nimport { ScrollArea } from \"./ui/scroll-area\";\r\nimport './styles/global.scss';  // Importa los estilos globales aquí\r\n\r\nconst Roster = () => {\r\n    const [participants, setParticipants] = useState([]);\r\n    const [selectedParticipant, setSelectedParticipant] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Aquí es donde colocamos la llamada fetch\r\n    useEffect(() => {\r\n        // Función para obtener los participantes desde el backend\r\n        const fetchParticipants = async () => {\r\n            setLoading(true);\r\n            try {\r\n                // Aquí usamos la URL desde la variable de entorno\r\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/participants`);\r\n                if (!response.ok) {\r\n                    throw new Error('Error al obtener los participantes');\r\n                }\r\n                const data = await response.json(); // Convertir los datos en JSON\r\n                setParticipants(data); // Guardar los datos de los participantes en el estado\r\n                setSelectedParticipant(data[0]); // Seleccionar el primer participante por defecto\r\n            } catch (err) {\r\n                setError(err.message); // Si hay un error, lo guardamos en el estado\r\n            } finally {\r\n                setLoading(false); // Dejamos de cargar\r\n            }\r\n        };\r\n\r\n        // Llamamos a la función para obtener los datos\r\n        fetchParticipants();\r\n    }, []); // Solo se ejecutará una vez cuando se monte el componente\r\n\r\n    // Renderizamos los participantes y mostramos el roster (equipo)\r\n    return (\r\n        <div className=\"container mx-auto py-10\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Vista del Equipo Draft</h1>\r\n            <ScrollArea className=\"w-full mb-6\">\r\n                <div className=\"flex space-x-2 pb-4\">\r\n                    {participants.map((participant) => (\r\n                        <Button\r\n                            key={participant.id}\r\n                            variant={selectedParticipant?.id === participant.id ? \"default\" : \"outline\"}\r\n                            onClick={() => setSelectedParticipant(participant)}\r\n                        >\r\n                            {participant.name}\r\n                        </Button>\r\n                    ))}\r\n                </div>\r\n            </ScrollArea>\r\n            {loading ? (\r\n                <div>Cargando...</div>\r\n            ) : error ? (\r\n                <div>Error: {error}</div>\r\n            ) : selectedParticipant ? (\r\n                <Card>\r\n                    <CardHeader>\r\n                        <CardTitle>Equipo de {selectedParticipant.name}</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <p>Puntos totales: {selectedParticipant.points}</p>\r\n                    </CardContent>\r\n                </Card>\r\n            ) : (\r\n                <div>Selecciona un participante para ver su equipo.</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Roster;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,QAAQ,WAAW;AACpE,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAO,sBAAsB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMoB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClCH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,eAAe,CAAC;QAC7E,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;QACzD;QACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;QACpChB,eAAe,CAACe,IAAI,CAAC,CAAC,CAAC;QACvBb,sBAAsB,CAACa,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVX,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;MAC3B,CAAC,SAAS;QACNd,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;IACJ,CAAC;;IAED;IACAG,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACIX,OAAA;IAAKuB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCxB,OAAA;MAAIuB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnE5B,OAAA,CAACF,UAAU;MAACyB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC/BxB,OAAA;QAAKuB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAC/BrB,YAAY,CAAC0B,GAAG,CAAEC,WAAW,iBAC1B9B,OAAA,CAACH,MAAM;UAEHkC,OAAO,EAAE,CAAA1B,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAE2B,EAAE,MAAKF,WAAW,CAACE,EAAE,GAAG,SAAS,GAAG,SAAU;UAC5EC,OAAO,EAAEA,CAAA,KAAM3B,sBAAsB,CAACwB,WAAW,CAAE;UAAAN,QAAA,EAElDM,WAAW,CAACI;QAAI,GAJZJ,WAAW,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKf,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACZrB,OAAO,gBACJP,OAAA;MAAAwB,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACtBnB,KAAK,gBACLT,OAAA;MAAAwB,QAAA,GAAK,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GACzBvB,mBAAmB,gBACnBL,OAAA,CAACP,IAAI;MAAA+B,QAAA,gBACDxB,OAAA,CAACL,UAAU;QAAA6B,QAAA,eACPxB,OAAA,CAACJ,SAAS;UAAA4B,QAAA,GAAC,YAAU,EAACnB,mBAAmB,CAAC6B,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACb5B,OAAA,CAACN,WAAW;QAAA8B,QAAA,eACRxB,OAAA;UAAAwB,QAAA,GAAG,kBAAgB,EAACnB,mBAAmB,CAAC8B,MAAM;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,gBAEP5B,OAAA;MAAAwB,QAAA,EAAK;IAA8C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAlEID,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAoEZ,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}