{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tebie\\\\Documents\\\\fantasix-draft\\\\frontend v2\\\\src\\\\components\\\\Roster.js\",\n  _s = $RefreshSig$();\n// src/components/Roster.js\nimport React from 'react';\nimport { useFantasy } from '../context/FantasyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RosterScreen = () => {\n  _s();\n  const {\n    participants,\n    players,\n    loading\n  } = useFantasy();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  if (!participants || participants.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No participants available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roster-screen\",\n    children: participants.map(participant => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participant-roster\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [participant.name, \"'s Roster\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.filter(player => {\n          var _participant$picks;\n          return (_participant$picks = participant.picks) === null || _participant$picks === void 0 ? void 0 : _participant$picks.some(pick => pick.playerId === player.id);\n        }).map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [player.name, \" - \", player.position]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, participant.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(RosterScreen, \"RjkId0cOF5kFOEYc6aj1gDLOyCs=\", false, function () {\n  return [useFantasy];\n});\n_c = RosterScreen;\nexport default RosterScreen;\nvar _c;\n$RefreshReg$(_c, \"RosterScreen\");","map":{"version":3,"names":["React","useFantasy","jsxDEV","_jsxDEV","RosterScreen","_s","participants","players","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","participant","name","filter","player","_participant$picks","picks","some","pick","playerId","id","position","_c","$RefreshReg$"],"sources":["C:/Users/tebie/Documents/fantasix-draft/frontend v2/src/components/Roster.js"],"sourcesContent":["// src/components/Roster.js\r\nimport React from 'react';\r\nimport { useFantasy } from '../context/FantasyContext';\r\n\r\nconst RosterScreen = () => {\r\n  const { participants, players, loading } = useFantasy();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!participants || participants.length === 0) {\r\n    return <div>No participants available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"roster-screen\">\r\n      {participants.map((participant) => (\r\n        <div key={participant.id} className=\"participant-roster\">\r\n          <h2>{participant.name}'s Roster</h2>\r\n          <ul>\r\n            {players\r\n              .filter((player) => participant.picks?.some((pick) => pick.playerId === player.id))\r\n              .map((player) => (\r\n                <li key={player.id}>\r\n                  {player.name} - {player.position}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RosterScreen;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,YAAY;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGP,UAAU,CAAC,CAAC;EAEvD,IAAIO,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAM,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACP,YAAY,IAAIA,YAAY,CAACQ,MAAM,KAAK,CAAC,EAAE;IAC9C,oBAAOX,OAAA;MAAAM,QAAA,EAAK;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9C;EAEA,oBACEV,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAN,QAAA,EAC3BH,YAAY,CAACU,GAAG,CAAEC,WAAW,iBAC5Bd,OAAA;MAA0BY,SAAS,EAAC,oBAAoB;MAAAN,QAAA,gBACtDN,OAAA;QAAAM,QAAA,GAAKQ,WAAW,CAACC,IAAI,EAAC,WAAS;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCV,OAAA;QAAAM,QAAA,EACGF,OAAO,CACLY,MAAM,CAAEC,MAAM;UAAA,IAAAC,kBAAA;UAAA,QAAAA,kBAAA,GAAKJ,WAAW,CAACK,KAAK,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKL,MAAM,CAACM,EAAE,CAAC;QAAA,EAAC,CAClFV,GAAG,CAAEI,MAAM,iBACVjB,OAAA;UAAAM,QAAA,GACGW,MAAM,CAACF,IAAI,EAAC,KAAG,EAACE,MAAM,CAACO,QAAQ;QAAA,GADzBP,MAAM,CAACM,EAAE;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,GAVGI,WAAW,CAACS,EAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWnB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACR,EAAA,CA7BID,YAAY;EAAA,QAC2BH,UAAU;AAAA;AAAA2B,EAAA,GADjDxB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}