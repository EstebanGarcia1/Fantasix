{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tebie\\\\Documents\\\\fantasix-draft\\\\frontend v2\\\\src\\\\components\\\\Draft.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TeamCard from \"./ui/TeamCard\";\nimport { ScrollArea } from \"./ui/scroll-area\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\nimport { useFantasy } from '../context/FantasyContext';\nimport './../styles/global.scss'; // Ajusta la ruta para ir al directorio correcto\nimport api from '../services/api';\nimport './../styles/global.scss'; // Ruta correcta para ir al directorio de estilos\nimport './../styles/card.scss';\nimport './../styles/button.scss';\nimport './../styles/scroll-area.scss';\nimport './../styles/select.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DraftScreen() {\n  _s();\n  const {\n    players,\n    setPlayers,\n    participants,\n    setParticipants\n  } = useFantasy();\n  const [teams, setTeams] = useState([]);\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [teamsResponse, playersResponse] = await Promise.all([api.fetchTeams(), api.fetchPlayers()]);\n        setTeams(teamsResponse.data);\n        setPlayers(playersResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [setPlayers]);\n  const selectPlayer = async player => {\n    if (player.team_id === 1 || player.selected || !selectedParticipant) return;\n    try {\n      setPlayers(players.map(p => p.id === player.id ? {\n        ...p,\n        selected: true,\n        selectedBy: selectedParticipant\n      } : p));\n      setParticipants(participants.map(p => p.id === selectedParticipant ? {\n        ...p,\n        picks: [...p.picks, player.id]\n      } : p));\n      await api.updatePlayer(player.id, {\n        selected: true,\n        selectedBy: selectedParticipant\n      });\n    } catch (error) {\n      console.error(\"Error selecting player:\", error);\n    }\n  };\n  const releasePlayer = async (playerId, participantId) => {\n    try {\n      setPlayers(players.map(p => p.id === playerId ? {\n        ...p,\n        selected: false,\n        selectedBy: null\n      } : p));\n      setParticipants(participants.map(p => p.id === participantId ? {\n        ...p,\n        picks: p.picks.filter(id => id !== playerId)\n      } : p));\n      await api.updatePlayer(playerId, {\n        selected: false,\n        selectedBy: null\n      });\n    } catch (error) {\n      console.error(\"Error releasing player:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-10 px-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onValueChange: value => setSelectedParticipant(Number(value)),\n        children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n          className: \"select-trigger\",\n          children: /*#__PURE__*/_jsxDEV(SelectValue, {\n            placeholder: \"Select participant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n          className: \"select-content\",\n          children: participants && participants.map(participant => /*#__PURE__*/_jsxDEV(SelectItem, {\n            value: participant.id.toString(),\n            className: \"select-item\",\n            children: participant.name\n          }, participant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollArea, {\n      className: \"scroll-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(TeamCard, {\n          team: team,\n          players: players,\n          onSelect: selectPlayer,\n          onRelease: releasePlayer\n        }, team.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(DraftScreen, \"ookETlj0T2MAgs5po0Lf7w1sXtI=\", false, function () {\n  return [useFantasy];\n});\n_c = DraftScreen;\nvar _c;\n$RefreshReg$(_c, \"DraftScreen\");","map":{"version":3,"names":["React","useState","useEffect","TeamCard","ScrollArea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","useFantasy","api","jsxDEV","_jsxDEV","DraftScreen","_s","players","setPlayers","participants","setParticipants","teams","setTeams","selectedParticipant","setSelectedParticipant","fetchData","teamsResponse","playersResponse","Promise","all","fetchTeams","fetchPlayers","data","error","console","selectPlayer","player","team_id","selected","map","p","id","selectedBy","picks","updatePlayer","releasePlayer","playerId","participantId","filter","className","children","onValueChange","value","Number","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","participant","toString","name","team","onSelect","onRelease","_c","$RefreshReg$"],"sources":["C:/Users/tebie/Documents/fantasix-draft/frontend v2/src/components/Draft.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TeamCard from \"./ui/TeamCard\";\r\nimport { ScrollArea } from \"./ui/scroll-area\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\r\nimport { useFantasy } from '../context/FantasyContext';\r\nimport './../styles/global.scss'; // Ajusta la ruta para ir al directorio correcto\r\nimport api from '../services/api';\r\nimport './../styles/global.scss'; // Ruta correcta para ir al directorio de estilos\r\nimport './../styles/card.scss';\r\nimport './../styles/button.scss';\r\nimport './../styles/scroll-area.scss';\r\nimport './../styles/select.scss';\r\n\r\n\r\nexport default function DraftScreen() {\r\n  const { players, setPlayers, participants, setParticipants } = useFantasy();\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [teamsResponse, playersResponse] = await Promise.all([\r\n          api.fetchTeams(),\r\n          api.fetchPlayers(),\r\n        ]);\r\n        setTeams(teamsResponse.data);\r\n        setPlayers(playersResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setPlayers]);\r\n\r\n  const selectPlayer = async (player) => {\r\n    if (player.team_id === 1 || player.selected || !selectedParticipant) return;\r\n\r\n    try {\r\n      setPlayers(players.map(p => p.id === player.id ? { ...p, selected: true, selectedBy: selectedParticipant } : p));\r\n      setParticipants(participants.map(p => p.id === selectedParticipant ? { ...p, picks: [...p.picks, player.id] } : p));\r\n\r\n      await api.updatePlayer(player.id, { selected: true, selectedBy: selectedParticipant });\r\n    } catch (error) {\r\n      console.error(\"Error selecting player:\", error);\r\n    }\r\n  };\r\n\r\n  const releasePlayer = async (playerId, participantId) => {\r\n    try {\r\n      setPlayers(players.map(p => p.id === playerId ? { ...p, selected: false, selectedBy: null } : p));\r\n      setParticipants(participants.map(p => p.id === participantId ? { ...p, picks: p.picks.filter(id => id !== playerId) } : p));\r\n\r\n      await api.updatePlayer(playerId, { selected: false, selectedBy: null });\r\n    } catch (error) {\r\n      console.error(\"Error releasing player:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-10 px-6\">\r\n      <div className=\"mb-6\">\r\n        <Select onValueChange={(value) => setSelectedParticipant(Number(value))}>\r\n          <SelectTrigger className=\"select-trigger\">\r\n            <SelectValue placeholder=\"Select participant\" />\r\n          </SelectTrigger>\r\n          <SelectContent className=\"select-content\">\r\n            {participants && participants.map((participant) => (\r\n              <SelectItem key={participant.id} value={participant.id.toString()} className=\"select-item\">\r\n                {participant.name}\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n      <ScrollArea className=\"scroll-area\">\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {teams.map((team) => (\r\n            <TeamCard\r\n              key={team.id}\r\n              team={team}\r\n              players={players}\r\n              onSelect={selectPlayer}\r\n              onRelease={releasePlayer}\r\n            />\r\n          ))}\r\n        </div>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}