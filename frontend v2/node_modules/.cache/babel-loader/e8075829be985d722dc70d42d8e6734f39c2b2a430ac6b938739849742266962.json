{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tebie\\\\Documents\\\\fantasix-draft\\\\frontend v2\\\\src\\\\components\\\\Roster.js\",\n  _s = $RefreshSig$();\n// src/components/Roster.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useFantasy } from '../context/FantasyContext';\nimport { Button } from \"./ui/button\";\nimport './../styles/global.scss';\nimport './../styles/roster.scss';\nimport api from '../services/api';\nimport defaultPlayer from '..default.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RosterScreen() {\n  _s();\n  const {\n    participants,\n    players,\n    setParticipants\n  } = useFantasy();\n  const [currentParticipantIndex, setCurrentParticipantIndex] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [participantsResponse, picksResponse] = await Promise.all([api.fetchParticipants(), api.fetchPicks()]);\n\n        // Actualizar los participantes con los picks de la base de datos\n        const participantsWithPicks = participantsResponse.data.map(participant => {\n          const picks = picksResponse.data.filter(pick => pick.participant_id === participant.id);\n          return {\n            ...participant,\n            picks: picks.length > 0 ? picks.map(pick => ({\n              playerId: pick.player_id,\n              pickOrder: pick.pick_order\n            })) : [] // Asegurarse de que picks sea un array\n          };\n        });\n        setParticipants(participantsWithPicks);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [setParticipants]);\n\n  // Funci贸n para cambiar al siguiente participante\n  const nextParticipant = () => {\n    if (currentParticipantIndex < participants.length - 1) {\n      setCurrentParticipantIndex(currentParticipantIndex + 1);\n    }\n  };\n\n  // Funci贸n para volver al participante anterior\n  const prevParticipant = () => {\n    if (currentParticipantIndex > 0) {\n      setCurrentParticipantIndex(currentParticipantIndex - 1);\n    }\n  };\n\n  // Si no hay participantes, mostrar un mensaje de carga\n  if (!participants || participants.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading participants...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  const currentParticipant = participants[currentParticipantIndex];\n  // Filtrar los jugadores seleccionados por el participante actual y asignarles su orden de pick\n  const participantPlayers = currentParticipant.picks.map(pick => {\n    const player = players.find(p => p.id === pick.playerId);\n    return player ? {\n      ...player,\n      pickOrder: pick.pickOrder\n    } : null;\n  }).filter(player => player !== null);\n\n  // Rellenar con jugadores predeterminados hasta que haya 5 en total\n  const displayedPlayers = [...participantPlayers];\n  while (displayedPlayers.length < 5) {\n    displayedPlayers.push({\n      id: `default-${displayedPlayers.length}`,\n      name: \"Jugador por defecto\",\n      position: \"N/A\",\n      score: \"N/A\",\n      image: \"/default-player.svg\",\n      // Imagen predeterminada\n      pickOrder: displayedPlayers.length + 1 // Orden de pick ficticio para jugadores por defecto\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roster-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participant-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"participant-title\",\n        children: [\"Equipo de \", currentParticipant.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: prevParticipant,\n        disabled: currentParticipantIndex === 0,\n        variant: \"outline\",\n        className: \"prev-button\",\n        children: \"Participante Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: nextParticipant,\n        disabled: currentParticipantIndex === participants.length - 1,\n        variant: \"outline\",\n        className: \"next-button\",\n        children: \"Siguiente Participante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-section\",\n      children: displayedPlayers.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: player.image,\n          alt: player.name,\n          className: \"player-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"player-name\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"player-position\",\n            children: [\"Posici\\xF3n: \", player.position]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"player-score\",\n            children: [\"Puntuaci\\xF3n: \", player.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), player.pickOrder && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"player-pick-order\",\n            children: [\"Orden de Pick: #\", player.pickOrder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(RosterScreen, \"LkdiAgsZMpgorESbxY5wCE/3ZGA=\", false, function () {\n  return [useFantasy];\n});\n_c = RosterScreen;\nvar _c;\n$RefreshReg$(_c, \"RosterScreen\");","map":{"version":3,"names":["React","useState","useEffect","useFantasy","Button","api","defaultPlayer","jsxDEV","_jsxDEV","RosterScreen","_s","participants","players","setParticipants","currentParticipantIndex","setCurrentParticipantIndex","fetchData","participantsResponse","picksResponse","Promise","all","fetchParticipants","fetchPicks","participantsWithPicks","data","map","participant","picks","filter","pick","participant_id","id","length","playerId","player_id","pickOrder","pick_order","error","console","nextParticipant","prevParticipant","children","fileName","_jsxFileName","lineNumber","columnNumber","currentParticipant","participantPlayers","player","find","p","displayedPlayers","push","name","position","score","image","className","onClick","disabled","variant","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/tebie/Documents/fantasix-draft/frontend v2/src/components/Roster.js"],"sourcesContent":["// src/components/Roster.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useFantasy } from '../context/FantasyContext';\r\nimport { Button } from \"./ui/button\";\r\nimport './../styles/global.scss';\r\nimport './../styles/roster.scss';\r\nimport api from '../services/api';\r\nimport defaultPlayer from '..default.svg';\r\n\r\n\r\nexport default function RosterScreen() {\r\n  const { participants, players, setParticipants } = useFantasy();\r\n  const [currentParticipantIndex, setCurrentParticipantIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [participantsResponse, picksResponse] = await Promise.all([\r\n          api.fetchParticipants(),\r\n          api.fetchPicks(),\r\n        ]);\r\n\r\n        // Actualizar los participantes con los picks de la base de datos\r\n        const participantsWithPicks = participantsResponse.data.map(participant => {\r\n          const picks = picksResponse.data.filter(pick => pick.participant_id === participant.id);\r\n          return {\r\n            ...participant,\r\n            picks: picks.length > 0 ? picks.map(pick => ({ playerId: pick.player_id, pickOrder: pick.pick_order })) : [] // Asegurarse de que picks sea un array\r\n          };\r\n        });\r\n\r\n        setParticipants(participantsWithPicks);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [setParticipants]);\r\n\r\n  // Funci贸n para cambiar al siguiente participante\r\n  const nextParticipant = () => {\r\n    if (currentParticipantIndex < participants.length - 1) {\r\n      setCurrentParticipantIndex(currentParticipantIndex + 1);\r\n    }\r\n  };\r\n\r\n  // Funci贸n para volver al participante anterior\r\n  const prevParticipant = () => {\r\n    if (currentParticipantIndex > 0) {\r\n      setCurrentParticipantIndex(currentParticipantIndex - 1);\r\n    }\r\n  };\r\n\r\n  // Si no hay participantes, mostrar un mensaje de carga\r\n  if (!participants || participants.length === 0) {\r\n    return <div>Loading participants...</div>;\r\n  }\r\n\r\n  const currentParticipant = participants[currentParticipantIndex];\r\n  // Filtrar los jugadores seleccionados por el participante actual y asignarles su orden de pick\r\n  const participantPlayers = currentParticipant.picks.map(pick => {\r\n    const player = players.find(p => p.id === pick.playerId);\r\n    return player ? { ...player, pickOrder: pick.pickOrder } : null;\r\n  }).filter(player => player !== null);\r\n\r\n  // Rellenar con jugadores predeterminados hasta que haya 5 en total\r\n  const displayedPlayers = [...participantPlayers];\r\n  while (displayedPlayers.length < 5) {\r\n    displayedPlayers.push({\r\n      id: `default-${displayedPlayers.length}`,\r\n      name: \"Jugador por defecto\",\r\n      position: \"N/A\",\r\n      score: \"N/A\",\r\n      image: \"/default-player.svg\", // Imagen predeterminada\r\n      pickOrder: displayedPlayers.length + 1, // Orden de pick ficticio para jugadores por defecto\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"roster-container\">\r\n      {/* T铆tulo del Participante */}\r\n      <div className=\"participant-header\">\r\n        <h1 className=\"participant-title\">Equipo de {currentParticipant.name}</h1>\r\n      </div>\r\n\r\n      {/* Navegaci贸n entre participantes */}\r\n      <div className=\"navigation-buttons\">\r\n        <Button\r\n          onClick={prevParticipant}\r\n          disabled={currentParticipantIndex === 0}\r\n          variant=\"outline\"\r\n          className=\"prev-button\"\r\n        >\r\n          Participante Anterior\r\n        </Button>\r\n        <Button\r\n          onClick={nextParticipant}\r\n          disabled={currentParticipantIndex === participants.length - 1}\r\n          variant=\"outline\"\r\n          className=\"next-button\"\r\n        >\r\n          Siguiente Participante\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Jugadores del Equipo del Participante */}\r\n      <div className=\"players-section\">\r\n        {displayedPlayers.map((player) => (\r\n          <div key={player.id} className=\"player-card\">\r\n            <img\r\n              src={player.image}\r\n              alt={player.name}\r\n              className=\"player-image\"\r\n            />\r\n            <div className=\"player-info\">\r\n              <h3 className=\"player-name\">{player.name}</h3>\r\n              <p className=\"player-position\">Posici贸n: {player.position}</p>\r\n              <p className=\"player-score\">\r\n                Puntuaci贸n: {player.score}\r\n              </p>\r\n              {/* Mostrar el orden de pick del jugador */}\r\n              {player.pickOrder && (\r\n                <p className=\"player-pick-order\">\r\n                  Orden de Pick: #{player.pickOrder}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}