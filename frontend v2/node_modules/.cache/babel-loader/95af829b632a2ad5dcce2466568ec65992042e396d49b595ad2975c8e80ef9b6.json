{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tebie\\\\Documents\\\\fantasix-draft\\\\frontend v2\\\\src\\\\components\\\\Draft.js\",\n  _s = $RefreshSig$();\n// src/components/Draft.js\n\nimport React, { useState, useEffect } from 'react';\nimport TeamCard from \"./ui/TeamCard\";\nimport ParticipantCard from \"./ui/ParticipantCard\";\nimport { ScrollArea } from \"./ui/scroll-area\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\nimport { useFantasy } from '../context/FantasyContext';\nimport './../styles/global.scss'; // Asegúrate de que el archivo CSS esté disponible\nimport api from '../services/api'; // Archivo para manejar llamadas API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DraftScreen() {\n  _s();\n  const {\n    players,\n    setPlayers,\n    participants,\n    setParticipants\n  } = useFantasy();\n  const [teams, setTeams] = useState([]);\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\n\n  // Obtener equipos al montar\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [teamsResponse, playersResponse, participantsResponse] = await Promise.all([api.fetchTeams(),\n        // Llamada API para obtener equipos\n        api.fetchPlayers(),\n        // Llamada API para obtener jugadores\n        api.fetchParticipants() // Llamada API para obtener participantes\n        ]);\n        setTeams(teamsResponse.data);\n        setPlayers(playersResponse.data);\n        setParticipants(participantsResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [setPlayers, setParticipants]);\n\n  // Seleccionar jugador\n  const selectPlayer = async player => {\n    if (player.selected || !selectedParticipant) return;\n    try {\n      // Actualizar estados localmente\n      setPlayers(players.map(p => p.id === player.id ? {\n        ...p,\n        selected: true,\n        selectedBy: selectedParticipant\n      } : p));\n      setParticipants(participants.map(p => p.id === selectedParticipant ? {\n        ...p,\n        picks: [...p.picks, player.id]\n      } : p));\n\n      // Llamada para actualizar en la BDD\n      await api.updatePlayer(player.id, {\n        selected: true,\n        selectedBy: selectedParticipant\n      });\n    } catch (error) {\n      console.error(\"Error selecting player:\", error);\n    }\n  };\n\n  // Liberar jugador\n  const releasePlayer = async (playerId, participantId) => {\n    try {\n      // Actualizar estados localmente\n      setPlayers(players.map(p => p.id === playerId ? {\n        ...p,\n        selected: false,\n        selectedBy: null\n      } : p));\n      setParticipants(participants.map(p => p.id === participantId ? {\n        ...p,\n        picks: p.picks.filter(id => id !== playerId)\n      } : p));\n\n      // Llamada para actualizar en la BDD\n      await api.updatePlayer(playerId, {\n        selected: false,\n        selectedBy: null\n      });\n    } catch (error) {\n      console.error(\"Error releasing player:\", error);\n    }\n  };\n\n  // Renderizar equipos y jugadores\n  const renderTeams = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"teams-container\",\n      children: teams.map(team => /*#__PURE__*/_jsxDEV(TeamCard, {\n        team: team,\n        players: players.filter(player => player.team_id === team.id) // Filtrar jugadores del equipo\n        ,\n        onSelect: selectPlayer,\n        onRelease: releasePlayer\n      }, team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Renderizar participantes y sus picks\n  const renderParticipants = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participants-container mt-8\",\n      children: participants.map(participant => /*#__PURE__*/_jsxDEV(ParticipantCard, {\n        participant: participant,\n        players: players,\n        onRelease: releasePlayer\n      }, participant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-10 px-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onValueChange: value => setSelectedParticipant(Number(value)),\n        children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n          className: \"select-trigger\",\n          children: /*#__PURE__*/_jsxDEV(SelectValue, {\n            placeholder: \"Seleccionar participante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n          className: \"select-content\",\n          children: participants && participants.map(participant => /*#__PURE__*/_jsxDEV(SelectItem, {\n            value: participant.id.toString(),\n            className: \"select-item\",\n            children: participant.name\n          }, participant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollArea, {\n      className: \"scroll-area\",\n      children: [renderTeams(), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), renderParticipants(), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(DraftScreen, \"ookETlj0T2MAgs5po0Lf7w1sXtI=\", false, function () {\n  return [useFantasy];\n});\n_c = DraftScreen;\nvar _c;\n$RefreshReg$(_c, \"DraftScreen\");","map":{"version":3,"names":["React","useState","useEffect","TeamCard","ParticipantCard","ScrollArea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","useFantasy","api","jsxDEV","_jsxDEV","DraftScreen","_s","players","setPlayers","participants","setParticipants","teams","setTeams","selectedParticipant","setSelectedParticipant","fetchData","teamsResponse","playersResponse","participantsResponse","Promise","all","fetchTeams","fetchPlayers","fetchParticipants","data","error","console","selectPlayer","player","selected","map","p","id","selectedBy","picks","updatePlayer","releasePlayer","playerId","participantId","filter","renderTeams","className","children","team","team_id","onSelect","onRelease","fileName","_jsxFileName","lineNumber","columnNumber","renderParticipants","participant","onValueChange","value","Number","placeholder","toString","name","_c","$RefreshReg$"],"sources":["C:/Users/tebie/Documents/fantasix-draft/frontend v2/src/components/Draft.js"],"sourcesContent":["// src/components/Draft.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport TeamCard from \"./ui/TeamCard\";\r\nimport ParticipantCard from \"./ui/ParticipantCard\";\r\nimport { ScrollArea } from \"./ui/scroll-area\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\r\nimport { useFantasy } from '../context/FantasyContext';\r\nimport './../styles/global.scss'; // Asegúrate de que el archivo CSS esté disponible\r\nimport api from '../services/api'; // Archivo para manejar llamadas API\r\n\r\nexport default function DraftScreen() {\r\n  const { players, setPlayers, participants, setParticipants } = useFantasy();\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\r\n\r\n  // Obtener equipos al montar\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [teamsResponse, playersResponse, participantsResponse] = await Promise.all([\r\n          api.fetchTeams(),        // Llamada API para obtener equipos\r\n          api.fetchPlayers(),      // Llamada API para obtener jugadores\r\n          api.fetchParticipants()  // Llamada API para obtener participantes\r\n        ]);\r\n        setTeams(teamsResponse.data);\r\n        setPlayers(playersResponse.data);\r\n        setParticipants(participantsResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setPlayers, setParticipants]);\r\n\r\n  // Seleccionar jugador\r\n  const selectPlayer = async (player) => {\r\n    if (player.selected || !selectedParticipant) return;\r\n\r\n    try {\r\n      // Actualizar estados localmente\r\n      setPlayers(players.map(p => p.id === player.id ? { ...p, selected: true, selectedBy: selectedParticipant } : p));\r\n      setParticipants(participants.map(p => p.id === selectedParticipant ? { ...p, picks: [...p.picks, player.id] } : p));\r\n\r\n      // Llamada para actualizar en la BDD\r\n      await api.updatePlayer(player.id, { selected: true, selectedBy: selectedParticipant });\r\n    } catch (error) {\r\n      console.error(\"Error selecting player:\", error);\r\n    }\r\n  };\r\n\r\n  // Liberar jugador\r\n  const releasePlayer = async (playerId, participantId) => {\r\n    try {\r\n      // Actualizar estados localmente\r\n      setPlayers(players.map(p => p.id === playerId ? { ...p, selected: false, selectedBy: null } : p));\r\n      setParticipants(participants.map(p => p.id === participantId ? { ...p, picks: p.picks.filter(id => id !== playerId) } : p));\r\n\r\n      // Llamada para actualizar en la BDD\r\n      await api.updatePlayer(playerId, { selected: false, selectedBy: null });\r\n    } catch (error) {\r\n      console.error(\"Error releasing player:\", error);\r\n    }\r\n  };\r\n\r\n  // Renderizar equipos y jugadores\r\n  const renderTeams = () => {\r\n    return (\r\n      <div className=\"teams-container\">\r\n        {teams.map(team => (\r\n          <TeamCard\r\n            key={team.id}\r\n            team={team}\r\n            players={players.filter(player => player.team_id === team.id)} // Filtrar jugadores del equipo\r\n            onSelect={selectPlayer}\r\n            onRelease={releasePlayer}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Renderizar participantes y sus picks\r\n  const renderParticipants = () => {\r\n    return (\r\n      <div className=\"participants-container mt-8\">\r\n        {participants.map(participant => (\r\n          <ParticipantCard\r\n            key={participant.id}\r\n            participant={participant}\r\n            players={players}\r\n            onRelease={releasePlayer}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-10 px-6\">\r\n      <div className=\"mb-6\">\r\n        <Select onValueChange={(value) => setSelectedParticipant(Number(value))}>\r\n          <SelectTrigger className=\"select-trigger\">\r\n            <SelectValue placeholder=\"Seleccionar participante\" />\r\n          </SelectTrigger>\r\n          <SelectContent className=\"select-content\">\r\n            {participants && participants.map((participant) => (\r\n              <SelectItem key={participant.id} value={participant.id.toString()} className=\"select-item\">\r\n                {participant.name}\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n      <ScrollArea className=\"scroll-area\">\r\n        {renderTeams()}  {/* Mostrar equipos y jugadores */}\r\n      </ScrollArea>\r\n      {renderParticipants()}  {/* Mostrar participantes */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}