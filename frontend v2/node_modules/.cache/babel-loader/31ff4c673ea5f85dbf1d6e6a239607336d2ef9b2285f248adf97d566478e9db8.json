{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tebie\\\\Documents\\\\fantasix-draft\\\\frontend v2\\\\src\\\\context\\\\FantasyContext.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Update the data-loading logic to avoid undefined errors\nconst FantasyProvider = ({\n  children\n}) => {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const [participantsData, playersData, teamsData] = await Promise.all([api.fetchParticipants(), api.fetchPlayers(), api.fetchTeams()]);\n        setParticipants(participantsData.data || []); // Ensure it is an array\n        setPlayers(playersData.data || []); // Ensure it is an array\n        setTeams(teamsData.data || []); // Ensure it is an array\n      } catch (error) {\n        console.error('Error al obtener datos:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FantasyContext.Provider, {\n    value: {\n      participants,\n      players,\n      teams,\n      loading,\n      setParticipants,\n      setPlayers,\n      setTeams\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(FantasyProvider, \"4EEtTFNP17j5oxJMbA3ZJO2S4SE=\");\n_c = FantasyProvider;\nvar _c;\n$RefreshReg$(_c, \"FantasyProvider\");","map":{"version":3,"names":["FantasyProvider","children","_s","participants","setParticipants","useState","players","setPlayers","teams","setTeams","loading","setLoading","useEffect","fetchData","participantsData","playersData","teamsData","Promise","all","api","fetchParticipants","fetchPlayers","fetchTeams","data","error","console","_jsxDEV","FantasyContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tebie/Documents/fantasix-draft/frontend v2/src/context/FantasyContext.js"],"sourcesContent":["// Update the data-loading logic to avoid undefined errors\r\nconst FantasyProvider = ({ children }) => {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [players, setPlayers] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [participantsData, playersData, teamsData] = await Promise.all([\r\n          api.fetchParticipants(),\r\n          api.fetchPlayers(),\r\n          api.fetchTeams(),\r\n        ]);\r\n        setParticipants(participantsData.data || []); // Ensure it is an array\r\n        setPlayers(playersData.data || []); // Ensure it is an array\r\n        setTeams(teamsData.data || []); // Ensure it is an array\r\n      } catch (error) {\r\n        console.error('Error al obtener datos:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <FantasyContext.Provider\r\n      value={{\r\n        participants,\r\n        players,\r\n        teams,\r\n        loading,\r\n        setParticipants,\r\n        setPlayers,\r\n        setTeams,\r\n      }}\r\n    >\r\n      {children}\r\n    </FantasyContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,MAAMA,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE5CO,SAAS,CAAC,MAAM;IACd,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFF,UAAU,CAAC,IAAI,CAAC;QAChB,MAAM,CAACG,gBAAgB,EAAEC,WAAW,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnEC,GAAG,CAACC,iBAAiB,CAAC,CAAC,EACvBD,GAAG,CAACE,YAAY,CAAC,CAAC,EAClBF,GAAG,CAACG,UAAU,CAAC,CAAC,CACjB,CAAC;QACFlB,eAAe,CAACU,gBAAgB,CAACS,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;QAC9ChB,UAAU,CAACQ,WAAW,CAACQ,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;QACpCd,QAAQ,CAACO,SAAS,CAACO,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACRb,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEa,OAAA,CAACC,cAAc,CAACC,QAAQ;IACtBC,KAAK,EAAE;MACL1B,YAAY;MACZG,OAAO;MACPE,KAAK;MACLE,OAAO;MACPN,eAAe;MACfG,UAAU;MACVE;IACF,CAAE;IAAAR,QAAA,EAEDA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAC/B,EAAA,CA1CIF,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}