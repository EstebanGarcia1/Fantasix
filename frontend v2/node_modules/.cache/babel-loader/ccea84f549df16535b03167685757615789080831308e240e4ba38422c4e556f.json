{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tebie\\\\Documents\\\\fantasix-draft\\\\frontend v2\\\\src\\\\components\\\\Draft.js\",\n  _s = $RefreshSig$();\n// src/components/Draft.js\n\nimport React, { useState, useEffect } from 'react';\nimport TeamCard from \"./ui/TeamCard\";\nimport { ScrollArea } from \"./ui/scroll-area\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\nimport { useFantasy } from '../context/FantasyContext';\nimport './../styles/global.scss'; // Asegúrate de que la ruta es la correcta\nimport api from '../services/api'; // Servicio para manejar llamadas a la API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DraftScreen() {\n  _s();\n  const {\n    players,\n    setPlayers,\n    participants,\n    setParticipants\n  } = useFantasy();\n  const [teams, setTeams] = useState([]);\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch teams and players from the backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const [teamsResponse, playersResponse, participantsResponse] = await Promise.all([api.fetchTeams(), api.fetchPlayers(), api.fetchParticipants()]);\n        setTeams(teamsResponse.data);\n        setPlayers(playersResponse.data);\n        setParticipants(participantsResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [setPlayers, setParticipants]);\n\n  // Function to select a player for a participant\n  const selectPlayer = async player => {\n    if (player.team_id === 1 || player.selected || !selectedParticipant) return;\n    try {\n      // Update the backend to reflect the player selection\n      await api.pickPlayer(selectedParticipant, player.id);\n\n      // Update the state locally after a successful API request\n      const updatedPlayers = players.map(p => p.id === player.id ? {\n        ...p,\n        selected: true,\n        selectedBy: selectedParticipant\n      } : p);\n      const updatedParticipants = participants.map(p => p.id === selectedParticipant ? {\n        ...p,\n        picks: [...(p.picks || []), player.id]\n      } : p);\n      setPlayers(updatedPlayers);\n      setParticipants(updatedParticipants);\n    } catch (error) {\n      console.error(\"Error selecting player:\", error);\n    }\n  };\n\n  // Function to release a player from a participant\n  const releasePlayer = async (playerId, participantId) => {\n    try {\n      // Update the backend to reflect the player release\n      await api.releasePlayer(participantId, playerId);\n\n      // Update the state locally after a successful API request\n      const updatedPlayers = players.map(p => p.id === playerId ? {\n        ...p,\n        selected: false,\n        selectedBy: null\n      } : p);\n      const updatedParticipants = participants.map(p => p.id === participantId ? {\n        ...p,\n        picks: (p.picks || []).filter(id => id !== playerId)\n      } : p);\n      setPlayers(updatedPlayers);\n      setParticipants(updatedParticipants);\n    } catch (error) {\n      console.error(\"Error releasing player:\", error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  if (!players.length || !teams.length || !participants.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No hay datos disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-10 px-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onValueChange: value => setSelectedParticipant(Number(value)),\n        children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n          className: \"select-trigger\",\n          children: /*#__PURE__*/_jsxDEV(SelectValue, {\n            placeholder: \"Select participant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n          className: \"select-content\",\n          children: participants && participants.map(participant => /*#__PURE__*/_jsxDEV(SelectItem, {\n            value: participant.id.toString(),\n            className: \"select-item\",\n            children: participant.name\n          }, participant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollArea, {\n      className: \"scroll-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(TeamCard, {\n          team: team,\n          players: players,\n          onSelect: selectPlayer,\n          onRelease: releasePlayer\n        }, team.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(DraftScreen, \"4SLKIEtRXCF1nITIOqC7mvl8+/A=\", false, function () {\n  return [useFantasy];\n});\n_c = DraftScreen;\nvar _c;\n$RefreshReg$(_c, \"DraftScreen\");","map":{"version":3,"names":["React","useState","useEffect","TeamCard","ScrollArea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","useFantasy","api","jsxDEV","_jsxDEV","DraftScreen","_s","players","setPlayers","participants","setParticipants","teams","setTeams","selectedParticipant","setSelectedParticipant","loading","setLoading","fetchData","teamsResponse","playersResponse","participantsResponse","Promise","all","fetchTeams","fetchPlayers","fetchParticipants","data","error","console","selectPlayer","player","team_id","selected","pickPlayer","id","updatedPlayers","map","p","selectedBy","updatedParticipants","picks","releasePlayer","playerId","participantId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onValueChange","value","Number","placeholder","participant","toString","name","team","onSelect","onRelease","_c","$RefreshReg$"],"sources":["C:/Users/tebie/Documents/fantasix-draft/frontend v2/src/components/Draft.js"],"sourcesContent":["// src/components/Draft.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport TeamCard from \"./ui/TeamCard\";\r\nimport { ScrollArea } from \"./ui/scroll-area\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\r\nimport { useFantasy } from '../context/FantasyContext';\r\nimport './../styles/global.scss'; // Asegúrate de que la ruta es la correcta\r\nimport api from '../services/api'; // Servicio para manejar llamadas a la API\r\n\r\nexport default function DraftScreen() {\r\n  const { players, setPlayers, participants, setParticipants } = useFantasy();\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch teams and players from the backend\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [teamsResponse, playersResponse, participantsResponse] = await Promise.all([\r\n          api.fetchTeams(),\r\n          api.fetchPlayers(),\r\n          api.fetchParticipants(),\r\n        ]);\r\n        \r\n        setTeams(teamsResponse.data);\r\n        setPlayers(playersResponse.data);\r\n        setParticipants(participantsResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setPlayers, setParticipants]);\r\n\r\n  // Function to select a player for a participant\r\n  const selectPlayer = async (player) => {\r\n    if (player.team_id === 1 || player.selected || !selectedParticipant) return;\r\n\r\n    try {\r\n      // Update the backend to reflect the player selection\r\n      await api.pickPlayer(selectedParticipant, player.id);\r\n\r\n      // Update the state locally after a successful API request\r\n      const updatedPlayers = players.map(p => p.id === player.id ? { ...p, selected: true, selectedBy: selectedParticipant } : p);\r\n      const updatedParticipants = participants.map(p => \r\n        p.id === selectedParticipant ? { ...p, picks: [...(p.picks || []), player.id] } : p\r\n      );\r\n\r\n      setPlayers(updatedPlayers);\r\n      setParticipants(updatedParticipants);\r\n    } catch (error) {\r\n      console.error(\"Error selecting player:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to release a player from a participant\r\n  const releasePlayer = async (playerId, participantId) => {\r\n    try {\r\n      // Update the backend to reflect the player release\r\n      await api.releasePlayer(participantId, playerId);\r\n\r\n      // Update the state locally after a successful API request\r\n      const updatedPlayers = players.map(p => p.id === playerId ? { ...p, selected: false, selectedBy: null } : p);\r\n      const updatedParticipants = participants.map(p =>\r\n        p.id === participantId ? { ...p, picks: (p.picks || []).filter(id => id !== playerId) } : p\r\n      );\r\n\r\n      setPlayers(updatedPlayers);\r\n      setParticipants(updatedParticipants);\r\n    } catch (error) {\r\n      console.error(\"Error releasing player:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  \r\n  if (!players.length || !teams.length || !participants.length) {\r\n    return <div>No hay datos disponibles</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-10 px-6\">\r\n      <div className=\"mb-6\">\r\n        <Select onValueChange={(value) => setSelectedParticipant(Number(value))}>\r\n          <SelectTrigger className=\"select-trigger\">\r\n            <SelectValue placeholder=\"Select participant\" />\r\n          </SelectTrigger>\r\n          <SelectContent className=\"select-content\">\r\n            {participants && participants.map((participant) => (\r\n              <SelectItem key={participant.id} value={participant.id.toString()} className=\"select-item\">\r\n                {participant.name}\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n      <ScrollArea className=\"scroll-area\">\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {teams.map((team) => (\r\n            <TeamCard\r\n              key={team.id}\r\n              team={team}\r\n              players={players}\r\n              onSelect={selectPlayer}\r\n              onRelease={releasePlayer}\r\n            />\r\n          ))}\r\n        </div>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}